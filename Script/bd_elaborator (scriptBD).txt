SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

DROP SCHEMA IF exists bd_elaborator;
CREATE SCHEMA IF NOT EXISTS `bd_elaborator` DEFAULT CHARACTER SET utf8 ;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`professor` (
  `idprofessor` INT(11) NOT NULL AUTO_INCREMENT,
  `nomeProf` VARCHAR(45) NOT NULL,
  `emailProf` VARCHAR(45) NOT NULL,
  `cpfProf` varchar(15) NOT NULL,
  `telProf1` varchar(15) NOT NULL,
  `telProf2` varchar(15) NULL DEFAULT NULL,
  `enderecoProf` VARCHAR(100) NULL DEFAULT NULL,
  `dispoProf` VARCHAR(45) NULL DEFAULT NULL,
  `login` VARCHAR(45) NOT NULL,
  `senha` VARCHAR(45) NOT NULL,
  `numAulas` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`idprofessor`),
  UNIQUE INDEX `cpfProf_UNIQUE` (`cpfProf` ASC),
  UNIQUE INDEX `emailProf_UNIQUE` (`emailProf` ASC),
  UNIQUE INDEX `idprofessor_UNIQUE` (`idprofessor` ASC),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`diasSemana` (
  `idsemana` INT(11) NOT NULL AUTO_INCREMENT,
  `nomeDia` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`idsemana`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`materia` (
  `idMateria` INT(11) NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(30) NOT NULL,
  PRIMARY KEY (`idMateria`),
  UNIQUE INDEX `nome_UNIQUE` (`nome` ASC))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`periodo` (
  `idperiodo` INT(11) NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idperiodo`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`DisponibilidadeProfessor` (
  `iddispo` INT(11) NOT NULL,
  `iddiasemana` INT(11) NOT NULL,
  `idperiodo` INT(11) NOT NULL,
  `idprof` INT(11) NOT NULL,
  PRIMARY KEY (`iddispo`, `iddiasemana`, `idperiodo`, `idprof`),
  INDEX `iddia_semana_idx` (`iddiasemana` ASC),
  INDEX `idperido_idx` (`idperiodo` ASC),
  INDEX `idprof_idx` (`idprof` ASC),
  CONSTRAINT `iddia_semana`
    FOREIGN KEY (`iddiasemana`)
    REFERENCES `bd_elaborator`.`diasSemana` (`idsemana`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idperido`
    FOREIGN KEY (`idperiodo`)
    REFERENCES `bd_elaborator`.`periodo` (`idperiodo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idprof`
    FOREIGN KEY (`idprof`)
    REFERENCES `bd_elaborator`.`professor` (`idprofessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`MateriaProfessor` (
  `materia_idMateria` INT(11) NOT NULL,
  `professor_idprofessor` INT(11) NOT NULL,
  PRIMARY KEY (`materia_idMateria`, `professor_idprofessor`),
  INDEX `fk_materia_has_professor_professor1_idx` (`professor_idprofessor` ASC),
  INDEX `fk_materia_has_professor_materia1_idx` (`materia_idMateria` ASC),
  CONSTRAINT `fk_materia_has_professor_materia1`
    FOREIGN KEY (`materia_idMateria`)
    REFERENCES `bd_elaborator`.`materia` (`idMateria`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materia_has_professor_professor1`
    FOREIGN KEY (`professor_idprofessor`)
    REFERENCES `bd_elaborator`.`professor` (`idprofessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


USE bd_elaborator;

insert into professor(
nomeProf,
emailProf,
cpfProf,
telProf1,
telProf2,
enderecoProf,
login,
senha,
numAulas)
values (
'(admin)',
'(admin)',
'(admin)',
'(admin)',
'(admin)',
'(admin)',
'admin',
sha1('123'),
0);

insert into professor(
nomeProf,
emailProf,
cpfProf,
telProf1,
telProf2,
enderecoProf,
login,
senha,
numAulas)
values (
'Claudio Araujo Farias',
'claudioaf_15@hotmail.com',
'485.25.308-29',
'(19) 3655-8528',
'(19) 98190-8528',
'Rua Érico Verissimo, nº915',
'claudio',
sha1('123'),
10);

insert into professor(
nomeProf,
emailProf,
cpfProf,
telProf1,
telProf2,
enderecoProf,
login,
senha,
numAulas)
values (
'Jonathan Ribeiro de Melo',
'donta.gigante@hotmail.com',
'485.25.308-28',
'(19) 3655-8528',
'(19) 98190-8528',
'Rua Érico Verissimo, nº915',
'jonathan',
sha1('123'),
10);





insert into diassemana(nomeDia)values('Segunda');
insert into diassemana(nomeDia)values('Terça');
insert into diassemana(nomeDia)values('Quarta');
insert into diassemana(nomeDia)values('Quinta');
insert into diassemana(nomeDia)values('Sexta');
insert into diassemana(nomeDia)values('Sábado');

DROP TABLE IF EXISTS `bd_elaborator`.`DisponibilidadeProfessor` ;

CREATE TABLE IF NOT EXISTS `bd_elaborator`.`DisponibilidadeProfessor` (
  `iddispo` INT NOT NULL AUTO_INCREMENT,
  `iddiasemana` INT NOT NULL,
  `idperiodo` INT NOT NULL,
  `idprof` INT NOT NULL,
  PRIMARY KEY (`iddispo`, `iddiasemana`, `idperiodo`, `idprof`),
  INDEX `iddia_semana_idx` (`iddiasemana` ASC),
  INDEX `idperido_idx` (`idperiodo` ASC),
  INDEX `idprof_idx` (`idprof` ASC),
  CONSTRAINT `iddia_semana`
    FOREIGN KEY (`iddiasemana`)
    REFERENCES `bd_elaborator`.`diasSemana` (`idsemana`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idperido`
    FOREIGN KEY (`idperiodo`)
    REFERENCES `bd_elaborator`.`periodo` (`idperiodo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idprof`
    FOREIGN KEY (`idprof`)
    REFERENCES `bd_elaborator`.`professor` (`idprofessor`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- delete from periodo where idperiodo in (1,2,3);
insert into periodo (idperiodo,nome) values (1,'07:20 às 08:10');
insert into periodo (idperiodo,nome) values (2,'08:10 às 09:00');
insert into periodo (idperiodo,nome) values (3,'09:00 às 09:50');
insert into periodo (idperiodo,nome) values (4,'10:10 às 11:00');
insert into periodo (idperiodo,nome) values (5,'11:00 às 11:50');
insert into periodo (idperiodo,nome) values (6,'12:50 às 13:40');
insert into periodo (idperiodo,nome) values (7,'13:40 às 14:30');
insert into periodo (idperiodo,nome) values (8,'14:30 às 15:20');

insert into periodo (idperiodo,nome) values (9,'13:00 às 14:00');
insert into periodo (idperiodo,nome) values (10,'14:00 às 15:05');
insert into periodo (idperiodo,nome) values (11,'15:20 às 16:20');
insert into periodo (idperiodo,nome) values (12,'16:20 às 17:25');

insert into periodo (idperiodo,nome) values (13,'19:00 às 19:55');
insert into periodo (idperiodo,nome) values (14,'19:55 às 20:50');
insert into periodo (idperiodo,nome) values (15,'21:05 às 22:05');
insert into periodo (idperiodo,nome) values (16,'22:05 às 23:00');

ALTER TABLE `bd_elaborator`.`professor` 
DROP COLUMN `dispoProf`;

-- ---------------------------------------------------------------------------

USE bd_elaborator;

insert into materia (nome) values ('Artes');
insert into materia (nome) values ('Biologia');
insert into materia (nome) values ('Educação Física');
insert into materia (nome) values ('Filosofia');
insert into materia (nome) values ('Física');
insert into materia (nome) values ('Geografia');
insert into materia (nome) values ('História');
insert into materia (nome) values ('Inglês');
insert into materia (nome) values ('Matemática');
insert into materia (nome) values ('Português');
insert into materia (nome) values ('Química');
insert into materia (nome) values ('Sociologia');

-- STORED PROCEDURES
USE `bd_elaborator`;
DROP procedure IF EXISTS `sAlteraDados`;

DELIMITER $$
USE `bd_elaborator`$$
CREATE PROCEDURE `sAlteraDados`(in pNome varchar(45), in pEmail varchar(45), in pCpf varchar(15), in pTel varchar(15), in pCel varchar(15), in pEndereco varchar(100), in pNumaula varchar(50), out pMensagem varchar(100))
BEGIN
Select * from bd_elaborator.professor where cpfProf = pCpf;
UPDATE bd_elaborator.professor
SET nomeProf = pNome, emailProf = pEmail, telProf1 = pTel, telProf2 = pCel, enderecoProf = pEndereco, numAulas = pNumaula
WHERE cpfProf = pCpf;
select 'Alteração realizada com sucesso!!' into pMensagem;
END$$

DELIMITER ;

-- ---------------------------------------------------------

USE `bd_elaborator`;
DROP procedure IF EXISTS `sAlteraSenha`;

DELIMITER $$
USE `bd_elaborator`$$
CREATE  PROCEDURE `sAlteraSenha`(in idProfLog int, in pNovaSenha varchar(45), in pConfSenha varchar(45), out pMensagem varchar(50))
BEGIN

-- select idprofessor from bd_elaborator.professor where emailProf = pEmail into @pId;

if ((pNovaSenha != '') and (pConfSenha != '')) then
	if(pConfSenha = pNovaSenha) then
		update professor set senha = (sha1(pNovaSenha)) where idprofessor = idProfLog;
		select 'Senha alterada com sucesso!' into pMensagem;
	else
		select 'Senhas não coincidem!' into pMensagem;
	end if;
else
	select 'Preencha todos os campos!' into pMensagem;
end if;

END$$

DELIMITER ;

-- ------------------------------------------------------------------------

-- FUNCTIONS
USE `bd_elaborator`;
DROP function IF EXISTS `fCadProf`;

DELIMITER $$
USE `bd_elaborator`$$
CREATE FUNCTION `fCadProf`(pNomeProf varchar(45), pEmailProf varchar(45), pCpfProf varchar(15), pTelProf1 varchar(15), pTelProf2 varchar(15), pEnderecoProf varchar(100), pLogin varchar(45), pSenha varchar(45), pConfSenha varchar(45), pNumaula varchar(10), pIdMateria int(11)) RETURNS varchar(100) CHARSET utf8
BEGIN
	if((pNomeProf != '')  and (pEmailProf != '') and (pCpfProf != '') and (pEnderecoProf != '') and (pLogin != '') and (pSenha != '')) then
		if(pConfSenha = pSenha) then
			Insert into professor (nomeProf, emailProf, cpfProf, telProf1, telProf2, enderecoProf, login, senha,numAulas) 
			values (pNomeProf, pEmailProf, pCpfProf, pTelProf1, pTelProf2, pEnderecoProf, pLogin, sha1(pSenha),pNumaula);
	
			select distinct last_insert_id() into @idProfessor from professor;
		

			insert into materiaprofessor (professor_idprofessor, materia_idMateria) values (@idprofessor, pIdMateria);
		
			RETURN 'Professor cadastrado com sucesso!';
		else
			RETURN 'Professor não cadastrado. Senhas não coincidem!';
		end if;
	else
		RETURN 'Professor não cadastrado. Preencha todos os dados obrigatórios!';
	end if;
END$$

DELIMITER ;

--  -----------------------------------------------------------------

USE `bd_elaborator`;
DROP function IF EXISTS `fCadMaterias`;

DELIMITER $$
USE `bd_elaborator`$$
CREATE  FUNCTION `fCadMaterias`(pNome varchar(60)) RETURNS varchar(50) CHARSET utf8
BEGIN

if (pNome != '') then
	if((SELECT idMateria FROM bd_elaborator.materia where nome = pNome) is null) then
		insert into materia (nome) values (pNome);
		return 'Matéria cadastrada com sucesso!';
	else
		return 'Matéria já existente!';
	end if;
else
	return 'Matéria não cadastrada. Campo vazio!';
end if;
END$$

DELIMITER ;

-- ------------------------------------------------------------------------

